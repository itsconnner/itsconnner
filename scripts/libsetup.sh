# SPDX-License-Identifier: GPL-3.0-only

RED='\033[0;31m'
YELLOW='\033[0;33m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RESET='\033[0m'

die()
{
	>&2 echo -en "${RED}fatal${RESET}: "
	>&2 echo $*
	exit 128
}

error()
{
	>&2 echo -en "${RED}error${RESET}: "
	>&2 echo $*
	return 1
}

warn()
{
	>&2 echo -e "${YELLOW}warning${RESET}: $*"
	return 1
}

exit_on_error()
{
	if [[ $? -ne 0 ]]; then
		exit 128
	fi
}

flex_tee()
{
	local file=$1

	if [[ $SUPERUSER ]]; then
		sudo tee -a $file
	else
		tee -a $file
	fi
}

write_new_file()
{
	local text=$1
	local file=$2
	local prompt=$3

	mkdir -p $(dirname $file)
	exit_on_error

	echo -n      | flex_tee $file
	echo $prompt | flex_tee $file > /dev/null
	echo $text   | flex_tee $file
}

write_on_missing()
{
	local text=$1
	local file=$IOTARGET
	local prompt="$COMMENT generated by $(basename $0)"

	if [[ -z "$file" ]]; then
		die "missing ‘file’ parameter"
	elif [[ $(echo $file | wc -w) != '1' ]]; then
		die "path ‘$file’ contains space"
	fi

	if [[ ! -f $file ]]; then
		write_new_file "$text" $file "$prompt"
		return 0
	fi

	if grep -q "^[[:space:]]*$text[[:space:]]*$" $file; then
		return 0
	fi

	if [[ "$(wc -w < $file)" = 0 ]]; then
		write_new_file "$text" $file "$prompt"
		return 0;
	fi

	if [[ $SUPERUSER ]]; then
		sudo perl -0777 -pi -e 's/\n+\z/\n\n/' $file
	else
		perl -0777 -pi -e 's/\n+\z/\n\n/' $file
	fi

	echo $prompt | flex_tee $file > /dev/null
	echo $text   | flex_tee $file
}

waiting_user()
{
	echo $*

	echo Press any key to continue...
	read -sN1
}

skip_line()
{
	if [[ -z "$1" || "$1" =~ ^#.* ]]; then
		return 0
	fi

	return 1
}

find_word()
{
	for word in "${@:2}"; do
		if [[ "$1" == "$word" ]]; then
			return 0
		fi
	done

	return 1
}

source $1
